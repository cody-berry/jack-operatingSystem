function Math.init 0
push constant 0
return
function Math.abs 0
push argument 0
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
neg
return
goto IF_END0
label IF_FALSE0
push argument 0
return
label IF_END0
function Math.multiply 0
push constant 0
return
function Math.divide 0
push constant 0
return
function Math.sqrt 4
push constant 0
pop local 0
push argument 0
push constant 382
call Math.min 2
pop local 1
push local 0
push local 1
add
push constant 2
call Math.divide 2
pop local 2
label WHILE_EXP0
push constant 0
not
not
if-goto WHILE_END0
push local 2
push local 2
call Math.multiply 2
push argument 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 2
pop local 0
label IF_FALSE0
push local 2
push local 2
call Math.multiply 2
push argument 0
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 2
pop local 1
label IF_FALSE1
push local 2
push local 2
call Math.multiply 2
push argument 0
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 2
return
label IF_FALSE2
push local 1
push local 0
sub
push constant 2
lt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 0
return
label IF_FALSE3
push local 0
push local 1
add
push constant 2
call Math.divide 2
pop local 2
goto WHILE_EXP0
label WHILE_END0
push constant 1
neg
return
function Math.max 0
push argument 0
push argument 1
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
return
goto IF_END0
label IF_FALSE0
push argument 1
return
label IF_END0
function Math.min 0
push argument 0
push argument 1
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
return
goto IF_END0
label IF_FALSE0
push argument 1
return
label IF_END0
