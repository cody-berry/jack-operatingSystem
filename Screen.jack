// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Screen.jack

/**
 * A library of functions for displaying graphics on the screen.
 * The Hack physical screen consists of 256 rows (indexed 0..255, top to bottom)
 * of 512 pixels each (indexed 0..511, left to right). The top left pixel on 
 * the screen is indexed (0,0).
 */
class Screen {
    static boolean color; // white is false and black is true

    /** Initializes the Screen. */
    function void init() {
        let color = false;
        return;
    }

    /** Erases the entire screen. */
    function void clearScreen() {
        var boolean previousColor;

        // set the previous color to the current color
        let previousColor = color;

        // draw a rectangle over the entire screen in white
        do Screen.setColor(false);
        do Screen.drawRectangle(0, 0, 255, 511);

        // set it back to the previous color
        do Screen.setColor(previousColor);
        return;
    }

    /** Sets the current color, to be used for all subsequent drawXXX commands.
     *  Black is represented by true, white by false. */
    function void setColor(boolean b) {
        let color = b;
        return;
    }

    /** Draws the (x,y) pixel, using the current color. */
    function void drawPixel(int x, int y) {

        // determine the address

        // determine the value of the word in the screen

        // use the or/not operator(s) to set the (x % 16)ᵗʰ bit of value
        // to the current color

        return;
    }

    /** Draws a line from pixel (x1,y1) to pixel (x2,y2), using the current color. */
    function void drawLine(int x1, int y1, int x2, int y2) {
        return;
    }

    /** Draws a filled rectangle whose top left corner is (x1, y1)
     * and bottom right corner is (x2,y2), using the current color. */
    function void drawRectangle(int x1, int y1, int x2, int y2) {
        return;
    }

    /** Draws a filled circle of radius r<=181 around (x,y), using the current color. */
    function void drawCircle(int x, int y, int r) {
        return;
    }
}
